/*
 * File: app/controller/Place.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Place', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            mainView: '#MainView',
            placeList: '#PlaceList',
            placeDetail: '#PlaceDetail'
        },

        control: {
            "#PlaceList": {
                itemtap: 'onListItemTap'
            },
            "[action=ViewMap]": {
                tap: 'onViewMapTap'
            },
            "[action=Save]": {
                tap: 'onSaveTap'
            },
            "[action=Delete]": {
                tap: 'onDeleteTap'
            },
            ".placemap": {
                centerchange: 'onMapCenterChange'
            }
        }
    },

    onListItemTap: function(dataview, index, target, record, e, options) {

        var form = Ext.create("MyApp.view.PlaceDetail",
        {
            title: record.data.name,
            record: record
        });

        this.getMainView().push(form);

        var me = this;

        Ext.Function.defer(function(){
            me.getPlaceList().deselectAll();
        }, 100);
    },

    onViewMapTap: function(button, e, options) {
        var record = this.getPlaceDetail().getRecord();

        var map = Ext.create("MyApp.view.PlaceMap", {
            title: record.data.name,
            mapOptions: {
                center: new google.maps.LatLng(record.data.lat, record.data.lng),
                zoom: 12
            }
        });

        this.getMainView().push(map);
    },

    onSaveTap: function(button, e, options) {
        var me = this;
        var form = this.getPlaceDetail();
        var values = form.getValues();
        var record = form.getRecord();

        record.beginEdit();

        record.set(values);

        if (record.isValid()) {
            record.endEdit();

            record.save({
                success: function() {
                    me.getMainView().pop();
                }
            });
        }
        else {
            record.cancelEdit();

            Ext.Msg.alert("Error", "There are errors with the record.");
        }
    },

    onDeleteTap: function(button, e, options) {
        var me = this;
        var form = this.getPlaceDetail();
        var record = form.getRecord();

        record.erase({
            success: function(){
                me.getMainView().pop();
            }
        });
    },

    onMapCenterChange: function(map, gmap, center, options) {
        var form = this.getPlaceDetail();

        form.setValues({
            lat: center.lat(),
            lng: center.lng()
        });
    }

});